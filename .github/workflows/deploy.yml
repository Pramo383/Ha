name: Node.js CI/CD (Production)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [25.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Deploy to Production Server
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        script: |
          set -e  # Exit immediately if a command exits with non-zero
          APP_PATH="${{ secrets.APP_PATH }}"
          ENV_FILE_PATH="$APP_PATH/.env"
          PM2_APP="${{ secrets.PM2_APP_NAME }}"

          echo "üöÄ Deploying to $APP_PATH"

          cd $APP_PATH

          # Backup current commit hash for rollback
          LAST_COMMIT=$(git rev-parse HEAD)
          echo "üîñ Saving last commit hash: $LAST_COMMIT"

          # Pull latest code
          git fetch --all
          git reset --hard origin/main || (echo "‚ùå Git pull failed. Rolling back." && git reset --hard $LAST_COMMIT && exit 1)

          # Install production dependencies
          npm ci --only=production || (echo "‚ùå npm ci failed. Rolling back." && git reset --hard $LAST_COMMIT && npm ci --only=production && pm2 restart $PM2_APP && exit 1)

          # Update .env file securely (base64 encoded)
          if [ ! -z "${{ secrets.ENV_FILE_BASE64 }}" ]; then
            echo "‚ö° Updating .env file from secret"
            echo "${{ secrets.ENV_FILE_BASE64 }}" | base64 -d > $ENV_FILE_PATH
          fi

          # Start or reload PM2 app using ecosystem file
          if pm2 describe $PM2_APP > /dev/null; then
            echo "‚ôªÔ∏è Reloading PM2 app: $PM2_APP"
            pm2 reload ecosystem.config.js --env production
          else
            echo "üöÄ Starting PM2 app: $PM2_APP"
            pm2 start ecosystem.config.js --env production
          fi

          # Save PM2 process list
          pm2 save

          # Show PM2 process list
          pm2 list

    - name: Health check
      run: |
        echo "üîç Checking app health..."
        curl -f "${{ secrets.HEALTHCHECK_URL }}" || (echo "‚ùå Health check failed! Rolling back..." && exit 1)

    - name: Send Notification on Failure
      if: failure()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload: |
          {
            "channel": "#deployments",
            "text": ":x: Deployment failed for *${{ secrets.PM2_APP_NAME }}* on *${{ secrets.SERVER_HOST }}*"
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
