name: Node.js CI/CD (24x7 Production)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    # ‚úÖ Checkout Repo
    - name: Checkout repository
      uses: actions/checkout@v3

    # ‚úÖ Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    # ‚úÖ Install dependencies
    - name: Install dependencies
      run: npm ci

    # ‚úÖ Build project
    - name: Build project
      run: npm run build

    # üöÄ Deploy to Production Server
    - name: Deploy to Server with PM2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        script: |
          set -e  # Exit on error
          APP_PATH="${{ secrets.APP_PATH }}"
          PM2_APP="${{ secrets.PM2_APP_NAME }}"
          ENV_FILE="$APP_PATH/.env"

          echo "üì¶ Deploying app to $APP_PATH"
          cd $APP_PATH

          echo "üîÑ Updating codebase"
          git fetch --all
          git reset --hard origin/main

          echo "üì¶ Installing production dependencies"
          npm ci --only=production

          echo "üîê Updating .env file (if provided)"
          if [ ! -z "${{ secrets.ENV_FILE_BASE64 }}" ]; then
            echo "${{ secrets.ENV_FILE_BASE64 }}" | base64 -d > $ENV_FILE
          fi

          echo "üöÄ Starting/Reloading app with PM2"
          if pm2 describe $PM2_APP > /dev/null; then
            pm2 reload ecosystem.config.js --env production
          else
            pm2 start ecosystem.config.js --env production
          fi

          pm2 save
          pm2 list

    # ü©∫ Health Check
    - name: Health Check
      run: |
        echo "üîç Checking health at ${{ secrets.HEALTHCHECK_URL }}"
        curl -fsSL "${{ secrets.HEALTHCHECK_URL }}" || exit 1

    # üì£ Slack Notification on Failure
    - name: Notify Slack
      if: failure()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload: |
          {
            "channel": "#deployments",
            "text": ":x: Deployment failed for *${{ secrets.PM2_APP_NAME }}* on *${{ secrets.SERVER_HOST }}*"
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
